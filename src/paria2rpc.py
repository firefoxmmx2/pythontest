#!/usr/bin/env python2
# encoding: utf-8
'''
paria2rpc -- a cli aria2 remote url adder.

paria2rpc is a cli aria2 remote url adder.

@author:     firefoxmmx
            
@copyright:  2013 ffmmx-home. All rights reserved.
            
@license:    Apache License 2.0

@contact:    firefoxmmx@gmail.com
@deffield    updated: Updated
'''

import sys
import os

from optparse import OptionParser
import urllib2
import json

__all__ = []
__version__ = 0.1
__date__ = '2013-02-09'
__updated__ = '2013-02-09'

DEBUG = 0
TESTRUN = 0
PROFILE = 0

# 参数 #
jsonRpcUrl = 'http://localhost:6800/jsonrpc'

# 方法 #
def addUrl(urls, dir_=None, cookie=None):
    '''aria2 remote add Url [with cookie and dir](dir and cookie is selectable)'''
    option = {}
    if dir_:
        option["dir"] = dir_
    
    jsonreq = json.dumps({'jsonrpc':'2.0', 
                         'id':'qwer', 
                         'method':'aria2.addUri', 
                         'params':[urls, option]
                         })
    res = urllib2.urlopen(jsonRpcUrl, jsonreq)
#    res = json.load(res.read())
#    if res["result"] == "0c17dc840d8212cb":
#        raise Exception("")
# 入口 #
def main(argv=None):
    '''Command line options.'''
    
    program_name = os.path.basename(sys.argv[0])
    program_version = "v0.1"
    program_build_date = "%s" % __updated__
 
    program_version_string = '%%prog %s (%s)' % (program_version, program_build_date)
    # program_usage = '''usage: spam two eggs''' # optional - will be autogenerated by optparse
    program_longdesc = ''''''  # optional - give further explanation about what the program does
    program_license = "Copyright 2013 firefoxmmx (ffmmx-home)                                            \
                Licensed under the Apache License 2.0\nhttp://www.apache.org/licenses/LICENSE-2.0"
 
    if argv is None:
        argv = sys.argv[1:]
    try:
        # setup option parser
        parser = OptionParser(version=program_version_string, epilog=program_longdesc, description=program_license)
        parser.add_option("-v", "--verbose", dest="verbose", action="count", help="set verbosity level [default: %default]")
        
        # set dir
        parser.add_option("-d", "--dir", dest="dir", help="set download dir")
        # set cookie
        
        # set jsonrpc url
        parser.add_option('-j', "--jsonrpc", dest="jsonrpc", help="set jsonrpc host [default: %default]", default="http://localhost:6800/jsonrpc")
        # set defaults
        parser.set_defaults(outfile="./out.txt", infile="./in.txt")
        
        # process options
        (opts, args) = parser.parse_args(argv)
        
        if opts.verbose > 0:
            print("verbosity level = %d" % opts.verbose)
            
        # MAIN BODY #
        urls = args
        dir_ = opts.dir
        addUrl(urls, dir_)
    except Exception, e:
        indent = len(program_name) * " "
        sys.stderr.write(program_name + ": " + repr(e) + "\n")
        sys.stderr.write(indent + "  for help use --help")
        return 2


if __name__ == "__main__":
    if DEBUG:
        sys.argv.append("-h")
    if TESTRUN:
        import doctest
        doctest.testmod()
    if PROFILE:
        import cProfile
        import pstats
        profile_filename = 'paria2rpc_profile.txt'
        cProfile.run('main()', profile_filename)
        statsfile = open("profile_stats.txt", "wb")
        p = pstats.Stats(profile_filename, stream=statsfile)
        stats = p.strip_dirs().sort_stats('cumulative')
        stats.print_stats()
        statsfile.close()
        sys.exit(0)
    sys.exit(main())
